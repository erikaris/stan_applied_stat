question(text = "Who is awesome?",
answer("I am", correct = TRUE),
answer("Not me")))
library(rlang)
quizlite <- function(...,
correct_response = 'You answer correctly, awesome :)',
incorrect_response = 'Oops...wrong answer, sorry :(')
R.version
sessionInfo()
install.packages("rlang")
a <- rlang::dots_list(...)
dots_list(a = 1, a = 2, b = 3, b = 4, 5, 6, .homonyms = "last")
library(rlang)
dots_list(a = 1, a = 2, b = 3, b = 4, 5, 6, .homonyms = "last")
dots_list(...)
library(purrr)
tempdir()
system.file("index.html")
quizlite_knit <- function(...,
correct_response = 'You answer correctly, awesome :)',
incorrect_response = 'Oops...wrong answer, sorry :(')
quizlite_knit(question(text = "What is better?",
answer("R", correct = TRUE),
answer("Python"),
answer("Javascript"),
answer("S")),
question(text = "Who is awesome?",
answer("I am", correct = TRUE),
answer("Not me")))
quizlite::quizlite_knit(question(text = "What is better?",
answer("R", correct = TRUE),
answer("Python"),
answer("Javascript"),
answer("S")),
question(text = "Who is awesome?",
answer("I am", correct = TRUE),
answer("Not me")))
library(quizlite)
quizlite::quizlite_knit(question(text = "What is better?",
answer("R", correct = TRUE),
answer("Python"),
answer("Javascript"),
answer("S")),
question(text = "Who is awesome?",
answer("I am", correct = TRUE),
answer("Not me")))
quizlite(question(text = "What is better?",
answer("R", correct = TRUE),
answer("Python"),
answer("Javascript"),
answer("S")),
question(text = "Who is awesome?",
answer("I am", correct = TRUE),
answer("Not me")))
dots <- rlang::dots_list(...)
rlang::dots_list(...)
dots <- rlang::dots_list(question(text = "What is better?",
answer("R", correct = TRUE),
answer("Python"),
answer("Javascript"),
answer("S")),
question(text = "Who is awesome?",
answer("I am", correct = TRUE),
answer("Not me")))
dots
dotserika <- rlang::dots_list("erika")
dotserika
dotserika <- rlang::dots_list("erika", 15)
dotserika
dotserika <- rlang::dots_list("erika", 15, NA)
dotserika
dotserika <- rlang::dots_list("erika", 15, NA, .preserve_empty = TRUE)
dotserika
dotserika <- rlang::dots_list("erika", 15, , .preserve_empty = TRUE)
dotserika
dotserika <- rlang::dots_list("erika", 15, , .preserve_empty = FALSE)
dotserika
head(iris)
head(Titanic)
datasets()
datasets::mtcars
head(iris)
# expected value for car washer
carX <- c(7, 9, 11, 13, 15, 17)
carProb <- c(1/12, 1/12, 1/4, 1/4, 1/6, 1/6)
carEx <- weighted.mean(carX, carProb)
print(carEx)
pnorm(1.27, mean=0, sd=1, lower.tail=FALSE)
?pnorm
pnorm(1.27, mean=0, sd=1, lower.tail=TRUE)
# P (z > –1.23)
pnorm(-1.23, lower.tail = FALSE)
# P (z > –1.23)
# cara 1:
1 - pnorm(-1.23)
# cara 2:
pnorm(-1.23, lower.tail = FALSE)
qnorm(0.95)
qnorm(0.025)
qnorm(1-0.025)
qnorm(0.025)
qnorm(1 - 0.025)
# water taxi passengers
pnorm(174, 172, 29)
# water taxi passengers
pnorm(174, mean = 172, sd = 29)
pnorm(0.07, mean = 0, sd = 1)
zscore <- (174-172)/29
zscore
pnorm(zscore, mean = 0, sd = 1)
pnorm(174, mean = 172, sd = 29)
# with standardizing
z <- (174-172)/29
pnorm(z, mean = 0, sd = 1)
# normal food packing machine
pnorm(125, 120, 16)
# normal food packing machine
pnorm(125, 120, 4)
pnorm(zfood)
zfood <- (125-120)/4
pnorm(zfood)
print(zfood)
# what weight separates the lightest 99.5% from the heaviest 0.5%?
qnorm(0.995)
z_0995 <- qnorm(0.995)
print(z_0995)
x_0995 <- 172 + (z_0995 * 29)
print(x_0995)
# test score
qnorm(1-0.12)
# test score
ztest <- qnorm(1-0.12)
print(ztest)
print(xtest)
xtest <- 74 + (ztest * 7)
print(xtest)
pnorm(1.27, mean=0, sd=1, lower.tail=TRUE)
1 - pnorm(-1.23)
pnorm(-1.23, lower.tail = FALSE)
pnorm(174, mean = 172, sd = 29)
z <- (174-172)/29
pnorm(z, mean = 0, sd = 1)
qnorm(0.995)
(16-20)/3
(18-20)/3
1-0.2514
ztest <- qnorm(1-0.12)
print(ztest)
xtest <- 74 + (ztest * 7)
print(xtest)
ztest <- qnorm(1-0.12)
print(ztest)
xtest <- 74 + (ztest * 7)
print(xtest)
# cara 1:
1 - pnorm(-1.23)
pnorm(-1.23, lower.tail = FALSE)
pnorm(1.5) - pnorm(-2)
1-0.025
pnorm(174, mean = 172, sd = 29)
-4/3
pnorm(18, 20, 3, lower.tail = FALSE)
qnorm(0.88)
15^(0.5)
?pnorm
?pnorm
pnorm(-1.23, lower.tail = FALSE)
?dnorm
dnorm(x=10, mean=20, sd=5)
pnorm(x=10, mean=20, sd=5)
pnorm(10, mean=20, sd=5)
dnorm(10, mean=20, sd=5)
expenditure <- c(21708, 14997, 20829, 18261, 19642, 19144, 21132, 20252, 21557, 21576, 20507, 17889, 21652, 21141, 20313, 19880, 22634, 24533, 23744, 34984, 24606, 26733, 25682, 17126, 23786, 14600, 24906, 26128, 23255, 24444, 25103, 26346, 25549, 26454, 21216, 24619, 28407, 24594, 17359, 15577, 17473, 18472, 25142, 22394, 23313, 19441, 26804, 26946, 13943, 14386)
median(expenditure)
quantile(expenditure)
?pbinom()
pbinom(12, size = 20, prob = 0.75)
pbinom(12, size = 20, prob = 0.75)
expend50 <- c(21708, 14997, 20829, 18261, 19642, 19144, 21132, 20252, 21557, 21576, 20507, 17889, 21652, 21141, 20313, 19880, 22634, 24533, 23744, 34984, 24606, 26733, 25682, 17126, 23786, 14600, 24906, 26128, 23255, 24444, 25103, 26346, 25549, 26454, 21216, 24619, 28407, 24594, 17359, 15577, 17473, 18472, 25142, 22394, 23313, 19441, 26804, 26946, 13943, 14386)
median(expend50)
qnorm(0.1)
qnorm(0.95)
dpois(1, 2)
pnorm(-1.26)
dbinom(0, 5, 0.75)
panah <- dbinom(0, 5, 0.75)
1-panah
pnorm(-1)
pnorm(0)
1 - pnorm(2.25)
pbinom(3, 20, 0.1)
sqrt(0.13)
pnorm(-1.41, 352500, 10606)
z = (337500-352500)/(75000/sqrt(50))
z
pnorm(z, 352000, (75000/sqrt(50)))
pnorm(z)
pnorm(-1.41)
141 <- prnorm(-1.41)
a <- pnorm(1.41)
a <- pnorm(-1.41)
a
b <- pnorm(2.12)
b
b-a
sigma_bar = 75000/sqrt(50)
za = (375000-352500)/sigma_bar
zb = (337500-352500)/sigma_bar
a <- pnorm(za)
a
b <- pnorm(zb)
b
a-b
qnorm(0.9)
qnorm(0.975)
qt(0.025, 48)
qt(0.025, 48, lower.tail = FALSE)
?qchisq
qchisq(0.025)
qchisq(0.025, df=9)
qchisq(0.975, df=9)
install.packages("pwr")
library(pwr)
pwr.chisq.test(sig.level = 0.01, power = 0.05)
pwr.chisq.test(sig.level = 0.01, power = 0.05)
pwr.chisq.test(sig.level = 0.01, w=-.05)
pwr.chisq.test(sig.level = 0.01, w=0.05)
qt(0.025, 48)
qt(0.025, 48, lower.tail = FALSE)
qnorm(0.025)
qnorm(1-0.005)
frac <- (0.43*0.57)/1500
frac_sqrt = sqrt(frac)
E <- qnorm(1-0.005)*frac_sqrt
E
frac
frac_sqrt
2.57*frac_sqrt
qnorm(1-0.005)*sqrt(0.43*0.57/1500)
qnorm(1-0.005)
0.43 - 0.03292631
0.43 + 0.03292631
setwd('/run/media/erikaris/DATA/opportunities/stan/my_own_material/')
setwd("/run/media/erikaris/DATA/opportunities/stan/my_own_material/lecture_11")
library(readr)
weight <- read_csv('weight.csv')
weight <- read_csv('weight.csv')
View(weight)
chisq.test(obs_freq, exp_freq)
chisq.test(weight$obs_freq, weight$exp_freq)
chisq.test(weight$obs_freq, weight$exp_freq)
weight$obs_freq
asdf <- c(1, 2, 3)
asdf
obs <- c(46, 1, 2, 3, 3, 30, 4, 0, 8, 3)
exp <- c(10, 10, 10, 10, 10, 10, 10, 10, 10, 10)
chisq.test(obs, exp)
chisq.test(weight$obs_freq, weight$exp_freq, rescale.p = TRUE)
chisq.test(weight$obs_freq, weight$exp_freq/100)
chisq.test(weight$obs_freq, (weight$exp_freq)/100)
tulip <- c(81, 50, 27)
res <- chisq.test(tulip, p = c(1/3, 1/3, 1/3))
res
tulip
obs <- c(46, 1, 2, 3, 3, 30, 4, 0, 8, 3)
exp <- c(10, 10, 10, 10, 10, 10, 10, 10, 10, 10)
chisq.test(obs, exp)
exp2 <- c(0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1)
chisq.test(obs, exp2)
exp2 <- c(1/10, 1/10, 1/10, 1/10, 1/10, 1/10, 1/10, 1/10, 1/10, 1/10)
chisq.test(obs, exp2)
chisq.test(obs, p = exp2)
chisq.test(obs)
weight_gof <- chisq.test(obs)
summary(weight_gof)
weight_gof
weight_gof$expected
weight <- read_csv('weight.csv')
weight_gof <- chisq.test(weight$obs_freq) #gof = goodness of fit
weight_gof
summary(weight_gof)
weight_gof$expected  # see the expected values
package.check()
search()
library()
pt(2.021, 49, lower.tail = FALSE)
pnorm(2.021)
pt(2.021, 49)
pnorm(2.021, lower.tail = FALSE)
pnorm(2.021, lower.tail = TRUE)
weight_gof <- chisq.test(weight$obs_freq)
weight_gof
qchisq(0.05, 9, lower.tail = FALSE)
qchisq(0.05, 2, lower.tail = FALSE)
pchisq(2.925, 2, lower.tail = FALSE)
# create 2-way table
abortion <- matrix(c(560, 308, 240, 92), ncol = 2)
colnames(abortion) <- c('man', 'woman')
rownames(abortion) <- c('agree', 'disagree')
## chi square test for homogeneity
chisq.test(abortion)
abortion
abortion <- matrix(c(560, 240, 308, 92), ncol = 2)
colnames(abortion) <- c('man', 'woman')
rownames(abortion) <- c('agree', 'disagree')
abortion
## chi square test for homogeneity
chisq.test(abortion)
## chi square test for homogeneity
chisq.test(abortion, simulate.p.value = TRUE)
## chi square test for homogeneity
chisq.test(abortion, simulate.p.value = TRUE, B = 10000)
## chi square test for homogeneity
chisq.test(abortion, simulate.p.value = TRUE, B = 20000)
## chi square test for homogeneity
chisq.test(abortion, simulate.p.value = TRUE, B = 5000)
## chi square test for homogeneity
chisq.test(abortion, simulate.p.value = TRUE, B = 10000)
## chi square test for homogeneity
chisq.test(abortion, simulate.p.value = TRUE, B = 15000)
install.packages("MVT")
abortion <- matrix(c(560, 240, 308, 92), ncol = 2)
colnames(abortion) <- c('man', 'woman')
rownames(abortion) <- c('agree', 'disagree')
abortion
## chi square test for homogeneity
chisq.test(abortion)
chisq.test(abortion, simulate.p.value = TRUE)
## chi square test for homogeneity
chisq.test(abortion, simulate.p.value = TRUE, B = 15000)
## chi square test for homogeneity
chisq.test(abortion, simulate.p.value = TRUE, B = 15000)
abortion <- matrix(c(560, 240, 308, 92), ncol = 2)
colnames(abortion) <- c('man', 'woman')
rownames(abortion) <- c('agree', 'disagree')
abortion
## chi square test for homogeneity
chisq.test(abortion, simulate.p.value = TRUE, B = 15000)
homogeneity.test(abortion)
library(MVT)
homogeneity.test(abortion)
abortion
chisq.test(abortion)
chisq.test(abortion, simulate.p.value = TRUE)
chisq.test(abortion, simulate.p.value = TRUE, B = 15000)
chisq.test(abortion)
## chi square test for homogeneity
abortion_chisq <- chisq.test(abortion, simulate.p.value = TRUE, B = 15000)
summary(abortion_chisq)
summary(abortion_chisq$expected)
abortion_chisq$expected
# check the expected count
abortion_chisq$expected
## create 2-way table
abortion <- matrix(c(560, 240, 308, 92), ncol = 2)
colnames(abortion) <- c('man', 'woman')
rownames(abortion) <- c('agree', 'disagree')
abortion
## chi square test for homogeneity
abortion_chisq <- chisq.test(abortion)
abortion_chisq
fisher.test(abortion)
# mcnemar test
hip <- matrix(c(309, 15, 10, 2), 2)
hip <- matrix(c(309, 15, 10, 2), ncol = 2,
dimnames = list("Hip protector worn" = c("no hip fracture", "hip fracture"),
"no hip protector worn" = c("no hip fracture", "hip fracture")))
hip
hip <- matrix(c(309, 15, 10, 2), ncol = 2,
dimnames = list("    Hip protector worn    " = c("no hip fracture", "hip fracture"),
"no hip protector worn    " = c("no hip fracture", "hip fracture")))
hip
hip <- matrix(c(309, 15, 10, 2), ncol = 2,
dimnames = list("Hip protector worn" = c("no hip fracture", "hip fracture"),
"     no hip protector worn     " = c("no hip fracture", "hip fracture")))
hip
hip <- matrix(c(309, 15, 10, 2), ncol = 2,
dimnames = list("Hip_protector_worn" = c("no_hip_fracture", "hip_fracture"),
"     no_hip_protector_worn     " = c("no_hip_fracture", "hip_fracture")))
hip
hip <- matrix(c(309, 15, 10, 2), ncol = 2,
dimnames = list("Hip_protector_worn" = c("no_hip_fracture", "hip_fracture"),
"     no_hip_protector_worn     " = c("   no_hip_fracture", "   hip_fracture")))
hip
mcnemar.test(hip)
internet <- read_csv('internet.csv')
View(internet)
failure <- read_csv('failure.csv')
failure <- read_csv('failure.csv')
View(failure)
chisq.test(failure$frequency)
?chisq.test
# goodness-of-fit test
weight_gof <- chisq.test(weight$obs_freq) #gof = goodness of fit
weight_gof
weight_gof2 <- chisq.test(weight$obs_freq, p = c(0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1)) #gof = goodness of fit
weight_gof2
# goodness-of-fit test
?chisq.test
?weight_gof
# gof for failure test
chisq.test(failure, p=c(0.472, 0.354, 0.133, 0.033))
failure <- read_csv('failure.csv')
chisq.test(failure, p=c(0.472, 0.354, 0.133, 0.033))
failure
# gof for failure test
chisq.test(failure, p=c(0.472, 0.354, 0.133, 0.033))
# gof for failure test
fail_gof <- chisq.test(failure, p=c(0.472, 0.354, 0.133, 0.033))
fail_gof$expected
# gof for failure test
fail_gof <- chisq.test(failure$frequency, p=c(0.472, 0.354, 0.133, 0.033))
fail_gof$expected
summary(fail_gof)
fail_gof$expected
?ppois
dpois(0, 0.75)
dpois(0, 0.75) * 32
# gof for failure test
fail_gof <- chisq.test(failure$frequency, p=c(dpois(0, 0.75), dpois(1, 0.75), dpois(2, 0.75), dpois(3, 0.75)))
fail_gof <- chisq.test(failure$frequency, p=c(dpois(0, 0.75), dpois(1, 0.75), dpois(2, 0.75), dpois(3, 0.75)))
fail_gof <- chisq.test(failure$frequency, p=c(dpois(0, 0.75), dpois(1, 0.75), dpois(2, 0.75), dpois(3, 0.75)))
fail_gof
# gof for failure test
# fail_gof <- chisq.test(failure$frequency, p=c(dpois(0, 0.75), dpois(1, 0.75), dpois(2, 0.75), dpois(3, 0.75)))
fail_gof2 <- chisq.test(failure$frequency, p=c(0.472, 0.354, 0.133, 0.033))
fail_gof2
echinaceae <- matrix(c(88, 15, 48, 4, 42, 10), ncol = 3)
colnames(echinaceae) <- c('placebo', 'echi20', 'echi60')
rownames(echinaceae) <- c('infected', 'not_infected')
View(echinaceae)
echi_test <- chisq.test(echinaceae)
echi_test
echinaceae
echi_test <- chisq.test(echinaceae)
echi_test  # see the result of the test
summary(echi_test) # check the details of result
echi_test$expected   # check the expected value. ensure there's not cell has E < 5
hip <- matrix(c(309, 15, 10, 2), ncol = 2,
dimnames = list("Hip_protector_worn" = c("no_hip_fracture", "hip_fracture"),
"     no_hip_protector_worn     " = c("   no_hip_fracture", "   hip_fracture")))
mcnemar.test(hip)
pchisq(212.8, 9, lower.tail = FALSE)
abortion <- matrix(c(560, 240, 308, 92), ncol = 2)
abortion
colnames(abortion) <- c('man', 'woman')
rownames(abortion) <- c('agree', 'disagree')
abortion
?matrix
abortion2 <- matrix(c(560, 308, 240, 92), nrow = 2)
aabortion2
abortion2
abortion2 <- matrix(c(560, 240, 308, 92), nrow = 2)
abortion
abortion2
abortion <- matrix(c(560, 240, 308, 92, 1, 2), ncol = 2)
abortion
# homogeneity
## create 2-way table
abortion <- matrix(c(560, 240, 308, 92, 1, 2), nrow = 2)
abortion
internet <- read_csv('internet.csv')
View(internet)
View(internet)
qchisq(0.05, 9 lower.tail = FALSE)
qchisq(0.05, 9, lower.tail = FALSE)
?qchisq
qchisq(0.05, 9, lower.tail = FALSE)
# CARI P-VALUE DARI TEST STATISTICS TERTENTU
misal: test statistis: 24.89   df = 10
# misal: test statistis: 24.89   df = 10
pchisq(27.89, 10, lower.tail = FALSE)
pchisq(212.8, 9, lower.tail = FALSE)
View(abortion2)
View(echi_test)
View(echi_test)
View(internet)
View(internet)
?fisher.exact
?fisher.exact
approve <- matrix(c(794, 86, 150, 570), ncol = 2)
colnames(abortion) <- c('approve', 'disapprove')
rownames(abortion) <- c('approve', 'disapprove')
approve <- matrix(c(794, 86, 150, 570), ncol = 2)
colnames(abortion) <- c('approve', 'disapprove')
approve <- matrix(c(794, 86, 150, 570), ncol = 2)
colnames(approve) <- c('approve', 'disapprove')
rownames(approve) <- c('approve', 'disapprove')
mcnemar.test(approve)
?mcnemar.test
?aov
setwd("/run/media/erikaris/DATA/opportunities/stan/my_own_material/lecture_12")
library(readr)
chest <- read_csv('chest.csv')
chest_anov <- aov(chest)
chest <- read_csv('chest.csv')
library(readr)
library(tidyverse)
chest <- read_csv('chest.csv')
chest
library(dplyr)
gathercols <- c('small_cars', 'medium_cars', 'large_cars')
chest2 <- chest %>%
gather(gathercols)
chest2
View(chest2)
?aov
View(chest)
# do anova test on chest2
aov(value ~ gathercols, data = chest2)
chest_aov <- aov(value ~ gathercols, data = chest2)
summary(chest_aov)
